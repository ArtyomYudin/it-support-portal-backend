"""Add DHCP monitoring tables

Revision ID: 1cbf89d7c0ca
Revises: 498301353049
Create Date: 2025-10-29 15:05:36.392734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1cbf89d7c0ca'
down_revision: Union[str, Sequence[str], None] = '498301353049'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dhcp_scope',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('server_address', sa.String(length=45), nullable=False),
    sa.Column('scope_id', sa.String(length=39), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('subnet_mask', sa.String(length=15), nullable=False),
    sa.Column('start_range', sa.String(length=15), nullable=False),
    sa.Column('end_range', sa.String(length=15), nullable=False),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('uq_dhcp_scope_server_scope', 'dhcp_scope', ['server_address', 'scope_id'], unique=True)
    op.create_table('dhcp_lease',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dhcp_scope_id', sa.Integer(), nullable=False),
    sa.Column('collected_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ip_address', sa.String(length=39), nullable=False),
    sa.Column('client_id', sa.String(length=255), nullable=True),
    sa.Column('host_name', sa.String(length=255), nullable=True),
    sa.Column('lease_expiration_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('address_state', sa.String(length=20), nullable=False),
    sa.Column('mac_address', sa.String(length=17), nullable=True),
    sa.ForeignKeyConstraint(['dhcp_scope_id'], ['dhcp_scope.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_dhcp_lease_ip', 'dhcp_lease', ['ip_address'], unique=False)
    op.create_index('ix_dhcp_lease_scope_collected', 'dhcp_lease', ['dhcp_scope_id', 'collected_at'], unique=False)
    op.create_table('dhcp_scope_statistic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dhcp_scope_id', sa.Integer(), nullable=False),
    sa.Column('collected_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_addresses', sa.Integer(), nullable=False),
    sa.Column('in_use', sa.Integer(), nullable=False),
    sa.Column('available', sa.Integer(), nullable=False),
    sa.Column('pending_offers', sa.Integer(), nullable=False),
    sa.Column('percentage_in_use', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['dhcp_scope_id'], ['dhcp_scope.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_dhcp_stat_scope_collected', 'dhcp_scope_statistic', ['dhcp_scope_id', 'collected_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_dhcp_stat_scope_collected', table_name='dhcp_scope_statistic')
    op.drop_table('dhcp_scope_statistic')
    op.drop_index('ix_dhcp_lease_scope_collected', table_name='dhcp_lease')
    op.drop_index('ix_dhcp_lease_ip', table_name='dhcp_lease')
    op.drop_table('dhcp_lease')
    op.drop_index('uq_dhcp_scope_server_scope', table_name='dhcp_scope')
    op.drop_table('dhcp_scope')
    # ### end Alembic commands ###
